<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="Close" xml:space="preserve">
    <value>Close</value>
  </data>
  <data name="Drinks" xml:space="preserve">
    <value>Drinks</value>
  </data>
  <data name="ExitQuestion" xml:space="preserve">
    <value>Are you sure you want to exit?</value>
  </data>
  <data name="Checkout" xml:space="preserve">
    <value>Checkout</value>
  </data>
  <data name="Language" xml:space="preserve">
    <value>Language</value>
  </data>
  <data name="Login" xml:space="preserve">
    <value>Login</value>
  </data>
  <data name="Movies" xml:space="preserve">
    <value>Movies</value>
  </data>
  <data name="No" xml:space="preserve">
    <value>No</value>
  </data>
  <data name="Pin" xml:space="preserve">
    <value>PIN</value>
  </data>
  <data name="Snacks" xml:space="preserve">
    <value>Snacks</value>
  </data>
  <data name="TotalPrice" xml:space="preserve">
    <value>Total</value>
  </data>
  <data name="UserId" xml:space="preserve">
    <value>User ID</value>
  </data>
  <data name="Yes" xml:space="preserve">
    <value>Yes</value>
  </data>
  <data name="Delete" xml:space="preserve">
    <value>Delete</value>
  </data>
  <data name="Options" xml:space="preserve">
    <value>Options</value>
  </data>
  <data name="NumOfTickets" xml:space="preserve">
    <value>Select number of tickets:</value>
  </data>
  <data name="Screen" xml:space="preserve">
    <value>Screen</value>
  </data>
  <data name="Confirm" xml:space="preserve">
    <value>Confirm</value>
  </data>
  <data name="EmptyOrder" xml:space="preserve">
    <value>The order is empty!</value>
  </data>
  <data name="Receipts" xml:space="preserve">
    <value>Receipts</value>
  </data>
  <data name="OrderID" xml:space="preserve">
    <value>Order ID</value>
  </data>
  <data name="CashierID" xml:space="preserve">
    <value>Cashier ID</value>
  </data>
  <data name="Date" xml:space="preserve">
    <value>Date</value>
  </data>
  <data name="Theme" xml:space="preserve">
    <value>Theme</value>
  </data>
  <data name="Light" xml:space="preserve">
    <value>Light</value>
  </data>
  <data name="Dark" xml:space="preserve">
    <value>Dark</value>
  </data>
  <data name="SelectDate" xml:space="preserve">
    <value>Select date</value>
  </data>
  <data name="ChangePassword" xml:space="preserve">
    <value>Change PIN</value>
  </data>
  <data name="Cancel" xml:space="preserve">
    <value>Cancel</value>
  </data>
  <data name="ChangePasswordSuccess" xml:space="preserve">
    <value>PIN changed successfully.</value>
  </data>
  <data name="ChangePasswordFail" xml:space="preserve">
    <value>PIN change failed.</value>
  </data>
  <data name="AddUser" xml:space="preserve">
    <value>Add User</value>
  </data>
  <data name="AddItem" xml:space="preserve">
    <value>Add Item</value>
  </data>
  <data name="AddMovie" xml:space="preserve">
    <value>Add Movie</value>
  </data>
  <data name="AddShowing" xml:space="preserve">
    <value>Add Showing</value>
  </data>
  <data name="ViewReceipts" xml:space="preserve">
    <value>View Receipts</value>
  </data>
  <data name="DeleteUser" xml:space="preserve">
    <value>Delete User</value>
  </data>
  <data name="DeleteShowing" xml:space="preserve">
    <value>Delete Showing</value>
  </data>
  <data name="MakeAdmin" xml:space="preserve">
    <value>Make Admin</value>
  </data>
  <data name="AddUserFailMessage" xml:space="preserve">
    <value>User ID and PIN must be 4 digits long.</value>
  </data>
  <data name="UserAdded" xml:space="preserve">
    <value>User Added</value>
  </data>
  <data name="MovieAdded" xml:space="preserve">
    <value>Movie Added</value>
  </data>
  <data name="ShowingAdded" xml:space="preserve">
    <value>Showing Added</value>
  </data>
  <data name="ItemAdded" xml:space="preserve">
    <value>Item Added</value>
  </data>
  <data name="AdminAdded" xml:space="preserve">
    <value>Admin Added</value>
  </data>
  <data name="InvalidInput" xml:space="preserve">
    <value>Invalid Input</value>
  </data>
  <data name="SelectMovie" xml:space="preserve">
    <value>Select Movie</value>
  </data>
  <data name="SelectTime" xml:space="preserve">
    <value>Select Time</value>
  </data>
  <data name="Price" xml:space="preserve">
    <value>Price</value>
  </data>
  <data name="AddShowingFailMessage" xml:space="preserve">
    <value>Enter a valid movie title and price.</value>
  </data>
  <data name="MovieName" xml:space="preserve">
    <value>Movie Name</value>
  </data>
  <data name="PosterUrl" xml:space="preserve">
    <value>Poster URL</value>
  </data>
  <data name="AddMovieFailMessage" xml:space="preserve">
    <value>Fill in all fields.</value>
  </data>
  <data name="Type" xml:space="preserve">
    <value>Type</value>
  </data>
  <data name="ItemName" xml:space="preserve">
    <value>Item Name</value>
  </data>
  <data name="PictureUrl" xml:space="preserve">
    <value>Picture URL</value>
  </data>
  <data name="AddItemFailMessage" xml:space="preserve">
    <value>Fill in all fields.</value>
  </data>
  <data name="DeleteMovie" xml:space="preserve">
    <value>Delete Movie</value>
  </data>
  <data name="DeleteItem" xml:space="preserve">
    <value>Delete Item</value>
  </data>
  <data name="Success" xml:space="preserve">
    <value>Success</value>
  </data>
  <data name="Fail" xml:space="preserve">
    <value>Fail</value>
  </data>
  <data name="Showing" xml:space="preserve">
    <value>Showing</value>
  </data>
  <data name="SelectShowing" xml:space="preserve">
    <value>Select Showing</value>
  </data>
  <data name="Blue" xml:space="preserve">
    <value>Blue</value>
  </data>
</root>